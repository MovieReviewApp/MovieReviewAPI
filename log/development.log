  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL) [0m
  [1m[35m (0.4ms)[0m  select sqlite_version(*)
  [1m[36m (1.2ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateMovie (20150306150948)
  [1m[35m (0.0ms)[0m  begin transaction
  [1m[36m (0.0ms)[0m  [1mrollback transaction[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateMovie (20150306150948)
  [1m[35m (0.0ms)[0m  begin transaction
  [1m[36m (0.0ms)[0m  [1mrollback transaction[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateMovie (20150306150948)
  [1m[35m (0.0ms)[0m  begin transaction
DEPRECATION WARNING: `#timestamp` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/annieb/wdi/labs/projects/MovieReviewAPI/db/migrate/20150306150948_create_movie.rb:9)
  [1m[36m (0.4ms)[0m  [1mCREATE TABLE "movies" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "gross" integer, "release_date" date, "mpaa_rating" varchar, "description" text, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES (?)  [["version", "20150306150948"]]
  [1m[36m (0.6ms)[0m  [1mcommit transaction[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.9ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL) [0m
  [1m[35m (0.1ms)[0m  select sqlite_version(*)
  [1m[36m (1.1ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateMovie (20150306150948)
  [1m[36m (0.0ms)[0m  [1mbegin transaction[0m
DEPRECATION WARNING: `#timestamp` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/annieb/wdi/labs/projects/MovieReviewAPI/db/migrate/20150306150948_create_movie.rb:9)
  [1m[35m (0.4ms)[0m  CREATE TABLE "movies" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "gross" integer DEFAULT 0, "release_date" date, "mpaa_rating" varchar, "description" text, "created_at" datetime, "updated_at" datetime) 
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20150306150948"]]
  [1m[35m (0.8ms)[0m  commit transaction
Migrating to CreateReview (20150306151840)
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
DEPRECATION WARNING: `#timestamp` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/annieb/wdi/labs/projects/MovieReviewAPI/db/migrate/20150306151840_create_review.rb:8)
  [1m[35m (0.3ms)[0m  CREATE TABLE "reviews" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "comments" text, "star_rating" integer, "username" varchar DEFAULT 'anonymous', "movie_id" integer, "created_at" datetime, "updated_at" datetime) 
  [1m[36m (0.1ms)[0m  [1mCREATE  INDEX "index_reviews_on_movie_id" ON "reviews" ("movie_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES (?)  [["version", "20150306151840"]]
  [1m[36m (0.7ms)[0m  [1mcommit transaction[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_reviews_on_movie_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_reviews_on_movie_id' AND type='index'
[0m
  [1m[36m (1.8ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL) [0m
  [1m[35m (0.1ms)[0m  select sqlite_version(*)
  [1m[36m (1.1ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateMovie (20150306150948)
  [1m[36m (0.0ms)[0m  [1mbegin transaction[0m
DEPRECATION WARNING: `#timestamp` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/annieb/wdi/labs/projects/MovieReviewAPI/db/migrate/20150306150948_create_movie.rb:9)
  [1m[35m (0.3ms)[0m  CREATE TABLE "movies" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "gross" integer DEFAULT 0, "release_date" date, "mpaa_rating" varchar, "description" text, "created_at" datetime, "updated_at" datetime) 
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20150306150948"]]
  [1m[35m (0.8ms)[0m  commit transaction
Migrating to CreateReview (20150306151840)
  [1m[36m (0.0ms)[0m  [1mbegin transaction[0m
DEPRECATION WARNING: `#timestamp` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/annieb/wdi/labs/projects/MovieReviewAPI/db/migrate/20150306151840_create_review.rb:8)
  [1m[35m (0.2ms)[0m  CREATE TABLE "reviews" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "comment" text, "star_rating" integer, "username" varchar DEFAULT 'anonymous', "movie_id" integer, "created_at" datetime, "updated_at" datetime) 
  [1m[36m (0.1ms)[0m  [1mCREATE  INDEX "index_reviews_on_movie_id" ON "reviews" ("movie_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES (?)  [["version", "20150306151840"]]
  [1m[36m (0.6ms)[0m  [1mcommit transaction[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_reviews_on_movie_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_reviews_on_movie_id' AND type='index'
[0m
